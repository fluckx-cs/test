name: production pipeline

on:
  push:
    branches:
      - main

jobs:
  check_for_changes:
    outputs:
      skeleton_changed: ${{ steps.check_changes.outputs.skeleton }}
      app1_changed: ${{ steps.check_changes.outputs.app1 }}
      app2_changed: ${{ steps.check_changes.outputs.app2 }}
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:1.6
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: mark as safe
        run: |
          git config --global --add safe.directory $(pwd)

      - name: check if skeleton has changes
        uses: dorny/paths-filter@v2
        id: check_changes
        with:
          filters: |
            skeleton:
              - 'stacks/skeleton/**'
              - 'stacks/skeleton/**/*tfvars
            skeleton_acceptance:
              - 'stacks/skeleton/**/acceptance.tfvars'
            app1:
              - 'stacks/skeleton/**'
              - 'stacks/infra/app1/**'
            app1_acceptance:
            app2:
              - 'stacks/skeleton/**'
              - 'stacks/infra/app2/**'

  plan_terraform_skeleton_production:
    runs-on: ubuntu-latest
    needs: check_for_changes
    if: ${{ always() && needs.check_for_changes.outputs.skeleton_changed == 'true' }}
    container:
      image: hashicorp/terraform:1.6
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: plan skeleton
        run: |
          cd stacks/skeleton/base-networking
          terraform init
          terraform plan -out=base-networking.tfplan

      - name: Save Terraform plan as artifact file
        uses: actions/upload-artifact@v3
        with:
          name: plan-files-skeleton
          path: |
            stacks/skeleton/**/*tfplan

  apply_terraform_skeleton_production:
    runs-on: ubuntu-latest
    needs: plan_terraform_skeleton_production
    if: ${{ always() && needs.check_for_changes.outputs.skeleton_changed == 'true' }}
    container:
      image: hashicorp/terraform:1.6
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: plan-files-skeleton

      - name: apply everything
        run: |
          cd stacks/skeleton/base-networking
          terraform init
          terraform apply -auto-approve base-networking.tfplan

  plan_terraform_app1_production:
    runs-on: ubuntu-latest
    if: ${{ always() && needs.check_for_changes.outputs.app1_changed == 'true' }}
    needs:
      - check_for_changes
      - apply_terraform_skeleton_production
    container:
      image: hashicorp/terraform:1.6
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: plan skeleton
        run: |
          cd stacks/infra/app1
          echo "Running plan in app1"
          terraform init
          terraform plan -out=app1.tfplan

      - name: Save Terraform plan as artifact file
        uses: actions/upload-artifact@v3
        with:
          name: plan-files-app1
          path: |
            stacks/app1/*tfplan

  apply_terraform_app1_production:
    runs-on: ubuntu-latest
    if: ${{ always() && needs.check_for_changes.outputs.app1_changed == 'true' }}
    needs: plan_terraform_app1_production
    container:
      image: hashicorp/terraform:1.6
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: plan-files-app1

      - name: apply everything
        run: |
          cd stacks/infra/app1
          echo "Running apply in app1"
          stat app1.tfplan

  plan_terraform_app2_production:
    runs-on: ubuntu-latest
    if: needs.check_for_changes.outputs.app2_changed == 'true'
    needs:
      - check_for_changes
      - plan_terraform_skeleton_production
    container:
      image: hashicorp/terraform:1.6
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: plan skeleton
        run: |
          cd stacks/infra/app2
          echo "Running plan in app2"
          terraform init
          terraform plan -out=app2.tfplan

      - name: Save Terraform plan as artifact file
        uses: actions/upload-artifact@v3
        with:
          name: plan-files-app2
          path: |
            stacks/app2/*tfplan

  apply_terraform_app2_production:
    runs-on: ubuntu-latest
    needs: plan_terraform_app2_production
    if: needs.check_for_changes.outputs.app2_changed == 'true'
    container:
      image: hashicorp/terraform:1.6
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: plan-files-app2

      - name: apply everything
        run: |
          cd stacks/infra/app2
          echo "Running apply in app2"
          stat app2.tfplan
